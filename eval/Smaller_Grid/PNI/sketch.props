mdp

//  7 |     .... .. . .....
//  6 |        t .t . ..  .
//  5 |     .... . ....   .
//  4 |       t  .    .....
//  3 |     ........t .....
//  2 |     . t t   .     .
//  1 |     i ... ......  .
//  0 |
//    ----------------------
//      ....................

formula u = (x=4&y=0)|(x=6&y=0)|(x=7&y=0)|(x=8&y=0)|(x=10&y=0)|(x=11&y=0)|(x=12&y=0)|(x=13&y=0)|(x=14&y=0)|(x=15&y=0)|(x=18&y=0)|(x=4&y=1)|(x=6&y=1)|(x=8&y=1)|(x=12&y=1)|(x=18&y=1)|(x=4&y=2)|(x=5&y=2)|(x=6&y=2)|(x=7&y=2)|(x=8&y=2)|(x=9&y=2)|(x=10&y=2)|(x=11&y=2)|(x=12&y=2)|(x=14&y=2)|(x=15&y=2)|(x=16&y=2)|(x=17&y=2)|(x=18&y=2)|(x=6&y=3)|(x=9&y=3)|(x=14&y=3)|(x=15&y=3)|(x=16&y=3)|(x=17&y=3)|(x=18&y=3)|(x=4&y=4)|(x=5&y=4)|(x=6&y=4)|(x=7&y=4)|(x=9&y=4)|(x=11&y=4)|(x=12&y=4)|(x=13&y=4)|(x=14&y=4)|(x=18&y=4)|(x=7&y=5)|(x=9&y=5)|(x=10&y=5)|(x=12&y=5)|(x=14&y=5)|(x=15&y=5)|(x=18&y=5)|(x=4&y=6)|(x=5&y=6)|(x=6&y=6)|(x=7&y=6)|(x=9&y=6)|(x=10&y=6)|(x=12&y=6)|(x=14&y=6)|(x=15&y=6)|(x=16&y=6)|(x=17&y=6)|(x=18&y=6);

formula r = (x=3&y=1)|(x=5&y=1)|(x=6&y=1)|(x=7&y=1)|(x=9&y=1)|(x=10&y=1)|(x=11&y=1)|(x=12&y=1)|(x=13&y=1)|(x=14&y=1)|(x=17&y=1)|(x=3&y=2)|(x=5&y=2)|(x=7&y=2)|(x=11&y=2)|(x=17&y=2)|(x=3&y=3)|(x=4&y=3)|(x=5&y=3)|(x=6&y=3)|(x=7&y=3)|(x=8&y=3)|(x=9&y=3)|(x=10&y=3)|(x=11&y=3)|(x=13&y=3)|(x=14&y=3)|(x=15&y=3)|(x=16&y=3)|(x=17&y=3)|(x=5&y=4)|(x=8&y=4)|(x=13&y=4)|(x=14&y=4)|(x=15&y=4)|(x=16&y=4)|(x=17&y=4)|(x=3&y=5)|(x=4&y=5)|(x=5&y=5)|(x=6&y=5)|(x=8&y=5)|(x=10&y=5)|(x=11&y=5)|(x=12&y=5)|(x=13&y=5)|(x=17&y=5)|(x=6&y=6)|(x=8&y=6)|(x=9&y=6)|(x=11&y=6)|(x=13&y=6)|(x=14&y=6)|(x=17&y=6)|(x=3&y=7)|(x=4&y=7)|(x=5&y=7)|(x=6&y=7)|(x=8&y=7)|(x=9&y=7)|(x=11&y=7)|(x=13&y=7)|(x=14&y=7)|(x=15&y=7)|(x=16&y=7)|(x=17&y=7);

formula d = (x=4&y=2)|(x=6&y=2)|(x=7&y=2)|(x=8&y=2)|(x=10&y=2)|(x=11&y=2)|(x=12&y=2)|(x=13&y=2)|(x=14&y=2)|(x=15&y=2)|(x=18&y=2)|(x=4&y=3)|(x=6&y=3)|(x=8&y=3)|(x=12&y=3)|(x=18&y=3)|(x=4&y=4)|(x=5&y=4)|(x=6&y=4)|(x=7&y=4)|(x=8&y=4)|(x=9&y=4)|(x=10&y=4)|(x=11&y=4)|(x=12&y=4)|(x=14&y=4)|(x=15&y=4)|(x=16&y=4)|(x=17&y=4)|(x=18&y=4)|(x=6&y=5)|(x=9&y=5)|(x=14&y=5)|(x=15&y=5)|(x=16&y=5)|(x=17&y=5)|(x=18&y=5)|(x=4&y=6)|(x=5&y=6)|(x=6&y=6)|(x=7&y=6)|(x=9&y=6)|(x=11&y=6)|(x=12&y=6)|(x=13&y=6)|(x=14&y=6)|(x=18&y=6)|(x=7&y=7)|(x=9&y=7)|(x=10&y=7)|(x=12&y=7)|(x=14&y=7)|(x=15&y=7)|(x=18&y=7);

formula l = (x=5&y=1)|(x=7&y=1)|(x=8&y=1)|(x=9&y=1)|(x=11&y=1)|(x=12&y=1)|(x=13&y=1)|(x=14&y=1)|(x=15&y=1)|(x=16&y=1)|(x=19&y=1)|(x=5&y=2)|(x=7&y=2)|(x=9&y=2)|(x=13&y=2)|(x=19&y=2)|(x=5&y=3)|(x=6&y=3)|(x=7&y=3)|(x=8&y=3)|(x=9&y=3)|(x=10&y=3)|(x=11&y=3)|(x=12&y=3)|(x=13&y=3)|(x=15&y=3)|(x=16&y=3)|(x=17&y=3)|(x=18&y=3)|(x=19&y=3)|(x=7&y=4)|(x=10&y=4)|(x=15&y=4)|(x=16&y=4)|(x=17&y=4)|(x=18&y=4)|(x=19&y=4)|(x=5&y=5)|(x=6&y=5)|(x=7&y=5)|(x=8&y=5)|(x=10&y=5)|(x=12&y=5)|(x=13&y=5)|(x=14&y=5)|(x=15&y=5)|(x=19&y=5)|(x=8&y=6)|(x=10&y=6)|(x=11&y=6)|(x=13&y=6)|(x=15&y=6)|(x=16&y=6)|(x=19&y=6)|(x=5&y=7)|(x=6&y=7)|(x=7&y=7)|(x=8&y=7)|(x=10&y=7)|(x=11&y=7)|(x=13&y=7)|(x=15&y=7)|(x=16&y=7)|(x=17&y=7)|(x=18&y=7)|(x=19&y=7);


const int x_init = 4;
const int y_init = 1;


formula yu = u ? (y+1) : y;
formula xr = r ? (x+1) : x;
formula yd = d ? (y-1) : y;
formula xl = l ? (x-1) : x;


module maze
         x : [0..19] init x_init;
         y : [0..7] init y_init;
        [up0] !goal & u   -> 0.9: (y'=yu) + 0.1: (x'=xr);
        [ri0] !goal & r   -> 0.9: (x'=xr) + 0.1: (y'=yd);
        [do0] !goal & d   -> 0.9: (y'=yd) + 0.1: (x'=xl);
        [le0] !goal & l   -> 0.9: (x'=xl) + 0.1: (y'=yu);
        [up1] !goal & u   -> 0.9: (y'=yu) + 0.1: (x'=xr);
        [ri1] !goal & r   -> 0.9: (x'=xr) + 0.1: (y'=yd);
        [do1] !goal & d   -> 0.9: (y'=yd) + 0.1: (x'=xl);
        [le1] !goal & l   -> 0.9: (x'=xl) + 0.1: (y'=yu);
endmodule

formula t0 = (x=6&y=2);
formula t1 = (x=8&y=2);
formula t2 = (x=12&y=3);
formula t3 = (x=6&y=4);
formula t4 = (x=7&y=6);
formula t5 = (x=10&y=6);
formula treasure = t0 | t1 | t2 | t3 | t4 | t5;
formula current_treasure = t0 ? 0 : (t1 ? 1 : (t2 ? 2 : (t3 ? 3 : (t4 ? 4 : (t5 ? 5 : (last_treasure))))));

module treasures
        last_treasure : [-1..5] init -1;
        [up0] true -> (last_treasure'=current_treasure);
        [up1] true -> (last_treasure'=current_treasure);
        [ri0] true -> (last_treasure'=current_treasure);
        [ri1] true -> (last_treasure'=current_treasure);
        [do0] true -> (last_treasure'=current_treasure);
        [do1] true -> (last_treasure'=current_treasure);
        [le0] true -> (last_treasure'=current_treasure);
        [le1] true -> (last_treasure'=current_treasure);
endmodule

rewards "rew"
        current_treasure!=last_treasure : 100;
endrewards


formula goal = sink;

const double discount_factor = 0.90;
module discounting
        sink : bool init false;
        [up0] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [up1] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [ri0] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [ri1] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [do0] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [do1] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [le0] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [le1] true -> discount_factor : true + 1-discount_factor : (sink'=true);
endmodule

module memory
        memory : [0..1] init 0;
        [up0] true -> (memory'=0);
        [up1] true -> (memory'=1);
        [ri0] true -> (memory'=0);
        [ri1] true -> (memory'=1);
        [do0] true -> (memory'=0);
        [do1] true -> (memory'=1);
        [le0] true -> (memory'=0);
        [le1] true -> (memory'=1);
endmodule