mdp

const int n = 1; // bits for the encryption key

module timing_attack

	    h  : [0..n]; // number of bits of the encryption key
        pc : [0..1];
        c  : [0..2*n];
        e  : [0..1]; // termination of the program


        []  (h>0)&(pc=0)&(c<2*n)              -> 1/2 : (h'=h-1)&(pc'=1)  + 1/2 : (c'=c+1); //b(i) is true
        []  (h>0)&(pc=0)&(c<2*n)              -> 1/2 : (h'=h-1)&(pc'=0)  + 1/2 : (c'=c+1); //b(i) is false
        []  (h=0)&(pc=0)&(c=2*n)&(e=0)        -> (e1' =1);
        []  (pc=1)&(c<2*n)                    -> 1/2 : (pc'=0)             + 1/2 : (c'=c+1);
        []  (h=0)&(pc=0)&(c<2*n)&(e=0)        -> 1/2 : (e' =1)             + 1/2 : (c'=c+1);
        []  (e=1)                              -> true;


endmodule

init  (h1=n)&(pc1=0)&(c1=0)&(e1=0)  endinit

label "c0" = (c=0)&(e=1);
label "c1" = (c=1)&(e=1);
label "c2" = (c=2)&(e=1);